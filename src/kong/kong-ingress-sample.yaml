# KONG_PROXY_IP=$(kubectl get svc --namespace kong {KONG_PROXY_SVC_NAME} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
# curl -i http://kong.example/sample --resolve kong.example:80:KONG_PROXY_IP

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-sample-ingress
  namespace: kong
  annotations:
    konghq.com/strip-path: 'true'
spec:
  ingressClassName: kong
  rules:
    - host: kong.example
      http:
        paths:
          - path: /sample
            pathType: ImplementationSpecific
            backend:
              service:
                name: sample-echo-service
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: echo
  name: sample-echo-service
  namespace: kong
spec:
  ports:
    - port: 8080
      name: high
      protocol: TCP
      targetPort: 8080
    - port: 80
      name: low
      protocol: TCP
      targetPort: 8080
  selector:
    app: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo
  name: sample-echo-deployment
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: echo
    spec:
      containers:
        - image: gcr.io/kubernetes-e2e-test-images/echoserver:2.2
          name: echo
          ports:
            - containerPort: 8080
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources: {}
